{"version":3,"sources":["logo.svg","Components/Canvas2.js","Components/Canvas.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Canvas2","sliderRef","useRef","sliderBut","sliderIn","useEffect","current","addEventListener","e","Rain","target","value","init","MyHeight","window","innerHeight","MyWidth","innerWidth","canvas","document","getElementById","height","width","c","getContext","getValues","Radious","Math","floor","random","Star","x","y","dx","lastPX","radious","angle","this","draw","beginPath","arc","PI","strokeStyle","fillStyle","fill","stroke","update","moveRadious","acos","pow","cos","sin","getV","arrayStars","i","push","setInterval","clearRect","length","className","ref","type","class","min","max","step","placeholder","id","style","backgroundColor","border","Canvas","mouse","undefined","ColorAllowed","fillC","Circle","dy","minRadious","color","drawCircle","Update","dimAll","getBoundingClientRect","clientX","clientY","arrayCircle","PX","PY","DX","DY","Color","onClick","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2HAAAA,EAAOC,QAAU,IAA0B,kC,yKC4H5BC,MAzHf,WACI,IAKMC,EAAYC,iBAAO,MACnBC,EAAYD,iBAAO,MACnBE,EAAWF,iBAAO,MAmGxB,OAjGAG,qBAAU,WACNJ,EAAUK,QAAQC,iBAAiB,UAAU,SAASC,GAClDC,EAAwB,IAAjBD,EAAEE,OAAOC,MAChBC,OAEJT,EAAUG,QAAQC,iBAAiB,SAAS,SAASC,GACjDC,EAAOL,EAASE,QAAQK,MACxBC,OAGJ,IAAIC,EAA8B,GAAnBC,OAAOC,YAClBC,EAA4B,GAAlBF,OAAOG,WAEjBR,EAAO,IAEPS,EAASC,SAASC,eAAe,aACrCF,EAAOG,OAASR,EAChBK,EAAOI,MAAQN,EACf,IAAIO,EAAIL,EAAOM,WAAW,MAE1B,SAASC,IACL,IAAIC,EAAUC,KAAKC,MAAoB,GAAdD,KAAKE,SAAc,GAG5C,MAAO,CAFEF,KAAKE,SAASb,EAAkB,GAARA,GACR,IAAhBW,KAAKE,SACEH,GAGpB,SAASI,EAAMC,EAAGC,EAAGC,EAAIC,EAAQC,EAASC,GACtCC,KAAKN,EAAIA,EACTM,KAAKL,EAAIA,EACTK,KAAKF,QAAUA,EACfE,KAAKJ,GAAKA,EACVI,KAAKH,OAASA,EACdG,KAAKD,MAAQA,EAEbC,KAAKC,KAAO,WACRf,EAAEgB,YACFhB,EAAEiB,IAAIH,KAAKN,EAAGM,KAAKL,EAAGK,KAAKF,QAAS,EAAW,EAARR,KAAKc,IAAM,GAClDlB,EAAEmB,YAAc,UAChBnB,EAAEoB,UAAY,UACdpB,EAAEqB,OACFrB,EAAEsB,UAGNR,KAAKS,OAAS,WACPT,KAAKL,EAAInB,IACRwB,KAAKJ,GAAK,EACVI,KAAKH,OAASG,KAAKN,EACnBM,KAAKD,MAAQ,EACbC,KAAKF,SAAwB,GAAbE,KAAKF,SAGzB,IAAIY,EAA6B,EAAfV,KAAKF,QAEvB,GAAe,IAAZE,KAAKJ,GACJI,KAAKN,GAAK,EACVM,KAAKL,GAAK,OACR,GAAe,IAAZK,KAAKJ,GAAS,CAEnBI,KAAKD,OAAST,KAAKqB,KAAK,EAAErB,KAAKsB,IADhB,EAC6BF,EAAY,GAAG,GAC3DV,KAAKN,EAAIM,KAAKH,OAASa,EAAcA,EAAcpB,KAAKuB,IAAIb,KAAKD,MAAMT,KAAKc,IAC5EJ,KAAKL,EAAInB,GAAYkC,EAAc,IAAMpB,KAAKwB,IAAId,KAAKD,MAAMT,KAAKc,IAGtE,GAAIM,EAAc,EAAG,CACjB,IAAIK,EAAO3B,IACXY,KAAKN,EAAIqB,EAAK,GACdf,KAAKL,EAAIoB,EAAK,GACdf,KAAKF,QAAUiB,EAAK,GACpBf,KAAKJ,GAAK,EAGdI,KAAKC,QAIb,IAAIe,EAAa,GACXzC,EAAO,WACTyC,EAAa,GACb,IAAK,IAAIC,EAAE,EAAGA,EAAI7C,EAAM6C,IAAI,CACxB,IAAIF,EAAO3B,IACX4B,EAAWE,KAAK,IAAIzB,EAAKsB,EAAK,GAAIA,EAAK,GAAI,EAAG,EAAGA,EAAK,GAAI,MAIlExC,IAEA4C,aAAY,WACRjC,EAAEkC,UAAU,EAAE,EAAEzC,EAAQH,GACxB,IAAK,IAAIyC,EAAI,EAAGA,EAAID,EAAWK,OAAQJ,IACnCD,EAAWC,GAAGR,WAEpB,MACH,IAKC,6BACI,yBAAKa,UAAU,mCACX,wBAAIA,UAAU,oBAAd,eACA,2BAAOC,IAAK3D,EAAW4D,KAAK,QAAQC,MAAM,+BAA+BC,IAAI,IAAIC,IAAI,IAAIC,KAAK,QAC9F,4BAAQL,IAAKzD,EAAWwD,UAAU,4BAAlC,YACA,2BAAOC,IAAKxD,EAAUyD,KAAK,SAASK,YAAY,iBAEpD,4BAAQC,GAAG,YAAYR,UAAU,OAAOS,MAlH5B,CAChBC,gBAAiB,UACjBC,OAAQ,oBAgHJ,UCQGC,MA5Hf,WAEI,IAKIC,EAAQ,CACRzC,OAAG0C,EACHzC,OAAGyC,GAGHC,EAAe,CACf,UACA,UACA,UACA,UACA,WAIAC,GAAQ,EA4FZ,OAxFAtE,qBAAU,WACN,IAAIQ,EAA8B,GAAnBC,OAAOC,YAClBC,EAA4B,GAAlBF,OAAOG,WAEjBC,EAASC,SAASC,eAAe,YACrCF,EAAOG,OAASR,EAChBK,EAAOI,MAAQN,EACf,IAAIO,EAAIL,EAAOM,WAAW,MAgB1B,SAASoD,EAAO7C,EAAEC,EAAEC,EAAG4C,EAAI1C,EAAS2C,EAAYC,GAC5C1C,KAAKN,EAAIA,EACTM,KAAKL,EAAIA,EACTK,KAAKJ,GAAKA,EACVI,KAAKwC,GAAKA,EACVxC,KAAKF,QAAUA,EACfE,KAAKyC,WAAaA,EAClBzC,KAAK0C,MAAQA,EAEb1C,KAAK2C,WAAa,WACdzD,EAAEgB,YACFhB,EAAEiB,IAAIH,KAAKN,EAAGM,KAAKL,EAAGK,KAAKF,QAAS,EAAW,EAARR,KAAKc,IAAM,GAClDlB,EAAEmB,YAAcqC,EAChBxD,EAAEoB,UAAYoC,EACXJ,GAAOpD,EAAEqB,OACZrB,EAAEsB,UAGNR,KAAK4C,OAAS,YACN5C,KAAKN,EAAIM,KAAKF,QAAUR,KAAKC,MAAMZ,IAAYqB,KAAKN,EAAIM,KAAKF,QAAU,KACvEE,KAAKJ,IAAMI,KAAKJ,KAEhBI,KAAKL,EAAIK,KAAKF,QAAUR,KAAKC,MAAMf,IAAawB,KAAKL,EAAIK,KAAKF,QAAU,KACxEE,KAAKwC,IAAMxC,KAAKwC,IAEpBxC,KAAKN,GAAKM,KAAKJ,GACfI,KAAKL,GAAKK,KAAKwC,GACf,IAAIK,EAAShE,EAAOiE,wBACjBX,EAAMzC,EAAEmD,EAAOnD,EAAIM,KAAKN,EAAI,IAAMyC,EAAMzC,EAAEmD,EAAOnD,EAAIM,KAAKN,GAAK,IAAMyC,EAAMxC,EAAEkD,EAAOlD,EAAIK,KAAKL,EAAI,IAAMwC,EAAMxC,EAAEkD,EAAOlD,EAAIK,KAAKL,GAAK,IAAMK,KAAKF,QAtD7I,GAuDDE,KAAKF,SAAW,EACVE,KAAKF,QAAUE,KAAKyC,aAC1BzC,KAAKF,SAAW,GAGpBE,KAAK2C,cArCblE,OAAOP,iBAAiB,aAXC,SAACC,GACtBgE,EAAMzC,EAAIvB,EAAE4E,QACZZ,EAAMxC,EAAIxB,EAAE6E,WAUhBvE,OAAOP,iBAAiB,UAPH,WACjBW,EAAOG,OAA4B,GAAnBP,OAAOC,YACvBG,EAAOI,MAA0B,GAAlBR,OAAOG,WACtBL,OA6CJ,IAAI0E,EAAc,GACZ1E,EAAO,WACT0E,EAAc,GACd,IAAK,IAAIhC,EAAI,EAAGA,EAAI,IAAKA,IAAI,CACzB,IAAI5B,EAAUC,KAAKC,MAAsB,EAAhBD,KAAKE,SAAe,GACzC0D,EAAK5D,KAAKE,UAAUb,EAAgB,EAARU,GAAaA,EACzC8D,EAAK7D,KAAKE,UAAUhB,EAAiB,EAARa,GAAaA,EAC1C+D,EAA6B,GAAvB9D,KAAKE,SAAW,IACtB6D,EAA6B,GAAvB/D,KAAKE,SAAW,IAEtB8D,EAAQjB,EAAa/C,KAAKC,MAAMD,KAAKE,SAAS6C,EAAahB,SAE/D4B,EAAY/B,KAAK,IAAIqB,EAAOW,EAAIC,EAAIC,EAAIC,EAAIhE,EAASA,EAASiE,MAItE/E,IACA4C,aAAY,WACRjC,EAAEkC,UAAU,EAAE,EAAEzC,EAAQH,GACxB,IAAK,IAAIyC,EAAI,EAAGA,EAAIgC,EAAY5B,OAAO,EAAGJ,IACtCgC,EAAYhC,GAAG2B,WAErB,MACH,IAIC,yBAAKtB,UAAU,YACX,yBAAKA,UAAU,8BACX,4BAAQA,UAAU,uBAAuBiC,QAAS,kBAAIjB,GAAOA,IAA7D,gBAEJ,4BAAQR,GAAG,WAAWR,UAAU,OAAOS,MApH3B,CAChBC,gBAAiB,UACjBC,OAAQ,oBAkHJ,UCvGGuB,MAXf,WAEE,OACE,yBAAKlC,UAAU,OAEb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCAcmC,QACW,cAA7BhF,OAAOiF,SAASC,UAEe,UAA7BlF,OAAOiF,SAASC,UAEhBlF,OAAOiF,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFjF,SAASC,eAAe,SDwHpB,kBAAmBiF,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.15d6b72d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {useEffect, useRef} from 'react'\r\n\r\n\r\nfunction Canvas2() {\r\n    const canvasStyle = {\r\n        backgroundColor: '#f3f6f4',\r\n        border: '2px solid black'\r\n    }\r\n\r\n    const sliderRef = useRef(null)\r\n    const sliderBut = useRef(null)\r\n    const sliderIn = useRef(null)\r\n\r\n    useEffect(() => {\r\n        sliderRef.current.addEventListener('change', function(e){\r\n            Rain = e.target.value * 400\r\n            init()\r\n        })\r\n        sliderBut.current.addEventListener('click', function(e){\r\n            Rain = sliderIn.current.value\r\n            init()\r\n        })\r\n\r\n        let MyHeight = window.innerHeight*0.8\r\n        let MyWidth = window.innerWidth*0.8\r\n\r\n        var Rain = 100\r\n\r\n        var canvas = document.getElementById('myCanvas2')        \r\n        canvas.height = MyHeight\r\n        canvas.width = MyWidth\r\n        var c = canvas.getContext('2d') \r\n\r\n        function getValues(){\r\n            let Radious = Math.floor(Math.random()*10 + 1)\r\n            let PX = Math.random()*MyWidth - MyWidth*0.3\r\n            let PY = Math.random()*(-2000)\r\n            return [PX, PY, Radious]\r\n        }\r\n\r\n        function Star (x, y, dx, lastPX, radious, angle){\r\n            this.x = x\r\n            this.y = y\r\n            this.radious = radious\r\n            this.dx = dx\r\n            this.lastPX = lastPX\r\n            this.angle = angle\r\n\r\n            this.draw = function() {\r\n                c.beginPath()            \r\n                c.arc(this.x, this.y, this.radious, 0, Math.PI*2, false)\r\n                c.strokeStyle = '#000000'\r\n                c.fillStyle = '#000000'\r\n                c.fill()\r\n                c.stroke()\r\n            }\r\n\r\n            this.update = function() {\r\n                if(this.y > MyHeight) {\r\n                    this.dx = 2\r\n                    this.lastPX = this.x\r\n                    this.angle = 0\r\n                    this.radious -= this.radious*0.3\r\n                }\r\n\r\n                var moveRadious = this.radious * 5\r\n\r\n                if(this.dx === 1){\r\n                    this.x += 3\r\n                    this.y += 8\r\n                }else if(this.dx === 2){\r\n                    let velocity = 2\r\n                    this.angle += Math.acos(1-Math.pow(velocity/moveRadious,2)/2)\r\n                    this.x = this.lastPX + moveRadious + moveRadious * Math.cos(this.angle+Math.PI) \r\n                    this.y = MyHeight + (moveRadious + 30 )* Math.sin(this.angle+Math.PI)\r\n                }      \r\n                \r\n                if (moveRadious < 5) {\r\n                    let getV = getValues()                    \r\n                    this.x = getV[0]\r\n                    this.y = getV[1]\r\n                    this.radious = getV[2]\r\n                    this.dx = 1\r\n                    \r\n                }\r\n                this.draw()\r\n            }            \r\n        }\r\n\r\n        var arrayStars = []\r\n        const init = () => {\r\n            arrayStars = []\r\n            for (var i=0; i < Rain; i++){\r\n                let getV = getValues()\r\n                arrayStars.push(new Star(getV[0], getV[1], 1, 0, getV[2], 0))\r\n            }\r\n        }\r\n\r\n        init()\r\n\r\n        setInterval(()=>{            \r\n            c.clearRect(0,0,MyWidth,MyHeight)\r\n            for (var i = 0; i < arrayStars.length; i++){\r\n                arrayStars[i].update()\r\n            }            \r\n        },16)\r\n    }, [])\r\n\r\n     \r\n\r\n    return (\r\n        <div>\r\n            <div className='row justify-content-center mt-2'>                \r\n                <h3 className='col-2 text-white'>Change Rain</h3>\r\n                <input ref={sliderRef} type=\"range\" class=\"custom-range col-2 mt-2 mr-5\" min=\"0\" max=\"5\" step=\"0.1\"></input>   \r\n                <button ref={sliderBut} className='btn btn-danger mr-2 ml-5'>Go Crazy</button>\r\n                <input ref={sliderIn} type='number' placeholder='Pick Number'></input>\r\n            </div>\r\n            <canvas id=\"myCanvas2\" className='mt-4' style={canvasStyle}>sdsd</canvas>       \r\n              \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Canvas2\r\n","import React, {useEffect, useState}  from 'react'\r\n\r\nfunction Canvas() {\r\n\r\n    const canvasStyle = {\r\n        backgroundColor: '#f3f6f4',\r\n        border: '2px solid black'\r\n    }\r\n\r\n    var mouse = {\r\n        x: undefined,\r\n        y: undefined\r\n    }  \r\n\r\n    var ColorAllowed = [\r\n        '#F2C38C',\r\n        '#24160D',\r\n        '#F35217',\r\n        '#8B0104',\r\n        '#570200'\r\n    ]\r\n\r\n\r\n    var fillC = true\r\n    var MaxRadious = 50\r\n    \r\n\r\n    useEffect(() => {\r\n        let MyHeight = window.innerHeight*0.8\r\n        let MyWidth = window.innerWidth*0.8\r\n\r\n        var canvas = document.getElementById('myCanvas')        \r\n        canvas.height = MyHeight\r\n        canvas.width = MyWidth\r\n        var c = canvas.getContext('2d')        \r\n\r\n        const LogPositionMouse = (e) => {\r\n            mouse.x = e.clientX\r\n            mouse.y = e.clientY\r\n        }\r\n\r\n        const ResizeCanvas = () => {\r\n            canvas.height = window.innerHeight*0.8\r\n            canvas.width = window.innerWidth*0.8\r\n            init()\r\n        }\r\n\r\n        window.addEventListener('mousemove', LogPositionMouse)\r\n        window.addEventListener('resize', ResizeCanvas)\r\n\r\n        function Circle(x,y,dx,dy, radious, minRadious, color){\r\n            this.x = x\r\n            this.y = y\r\n            this.dx = dx\r\n            this.dy = dy\r\n            this.radious = radious\r\n            this.minRadious = minRadious\r\n            this.color = color\r\n\r\n            this.drawCircle = function (){\r\n                c.beginPath()            \r\n                c.arc(this.x, this.y, this.radious, 0, Math.PI*2, false)\r\n                c.strokeStyle = color\r\n                c.fillStyle = color\r\n                if(fillC){c.fill()}\r\n                c.stroke()\r\n            }\r\n\r\n            this.Update = function() {\r\n                if (this.x + this.radious > Math.floor(MyWidth) || this.x - this.radious < 0){\r\n                    this.dx = -this.dx\r\n                }\r\n                if (this.y + this.radious > Math.floor(MyHeight) || this.y - this.radious < 0){\r\n                    this.dy = -this.dy\r\n                }\r\n                this.x += this.dx\r\n                this.y += this.dy \r\n                let dimAll = canvas.getBoundingClientRect()\r\n                if(mouse.x-dimAll.x - this.x < 50 && mouse.x-dimAll.x - this.x > -50 && mouse.y-dimAll.y - this.y < 50 && mouse.y-dimAll.y - this.y > -50 && this.radious < MaxRadious) {\r\n                    this.radious += 1\r\n                }else if (this.radious > this.minRadious){\r\n                    this.radious -= 1                }\r\n\r\n\r\n                this.drawCircle()\r\n            }\r\n        }          \r\n        \r\n        \r\n        var arrayCircle = []\r\n        const init = () => {\r\n            arrayCircle = []\r\n            for (var i = 0; i < 500; i++){\r\n                let Radious = Math.floor(Math.random() * 7 + 1)\r\n                var PX = Math.random()*(MyWidth-Radious*2) + Radious\r\n                var PY = Math.random()*(MyHeight-Radious*2) + Radious\r\n                var DX = (Math.random() - 0.5) * 2\r\n                var DY = (Math.random() - 0.5) * 2      \r\n                //var Color = Math.floor(Math.random()*16777215).toString(16)            \r\n                var Color = ColorAllowed[Math.floor(Math.random()*ColorAllowed.length)]\r\n                //var Color = '#ff0000'          \r\n                arrayCircle.push(new Circle(PX, PY, DX, DY, Radious, Radious, Color))\r\n            }\r\n        }   \r\n\r\n        init()        \r\n        setInterval(()=>{            \r\n            c.clearRect(0,0,MyWidth,MyHeight)\r\n            for (var i = 0; i < arrayCircle.length-1; i++){\r\n                arrayCircle[i].Update()\r\n            }            \r\n        },16)\r\n    }, [])\r\n    \r\n\r\n    return (\r\n        <div className='col mt-2'>\r\n            <div className='row justify-content-center'>\r\n                <button className='btn btn-success mt-1' onClick={()=>fillC=!fillC} >Fill or Not</button>\r\n            </div>\r\n            <canvas id=\"myCanvas\" className='mt-1' style={canvasStyle}>sdsd</canvas>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Canvas\r\n","import React from 'react';\nimport './App.css';\nimport MyNavbar from './Components/MyNavbar';\nimport Canvas3 from './Components/Canvas3';\nimport Canvas2 from './Components/Canvas2';\nimport Canvas from './Components/Canvas';\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      {/* <MyNavbar/>   */}\n      <Canvas />\n      <Canvas2 />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}