{"version":3,"sources":["Components/Canvas4.js","Components/Canvas.js","Components/Canvas2.js","App.js","serviceWorker.js","index.js"],"names":["Canvas4","mouse","x","undefined","y","ColorAllowed","fillC","useEffect","MyHeight","window","innerHeight","MyWidth","innerWidth","canvas","document","getElementById","height","width","c","getContext","Circle","dx","dy","radious","minRadious","color","this","drawCircle","beginPath","arc","Math","PI","strokeStyle","fillStyle","fill","stroke","Update","floor","dimAll","getBoundingClientRect","addEventListener","e","clientX","clientY","init","arrayCircle","i","Radious","random","PX","PY","DX","DY","Color","length","push","interval4","setInterval","clearRect","clearInterval","className","onClick","id","style","backgroundColor","border","Canvas","interval","Canvas2","sliderRef","useRef","sliderBut","sliderIn","current","Rain","target","value","getValues","Star","lastPX","angle","draw","update","moveRadious","acos","pow","cos","sin","getV","arrayStars","ref","type","class","min","max","step","placeholder","App","useState","show","setShow","xx","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.62d1a713.chunk.js","sourcesContent":["import React, {useEffect}  from 'react'\r\n\r\nfunction Canvas4() {\r\n\r\n    const canvasStyle = {\r\n        backgroundColor: '#f3f6f4',\r\n        border: '2px solid black'\r\n    }\r\n\r\n    var mouse = {\r\n        x: undefined,\r\n        y: undefined\r\n    }  \r\n\r\n    var ColorAllowed = [\r\n        '#F2C38C',\r\n        '#24160D',\r\n        '#F35217',\r\n        '#8B0104',\r\n        '#570200'\r\n    ]\r\n\r\n\r\n    var fillC = true\r\n    \r\n\r\n    useEffect(() => {\r\n        let MyHeight = window.innerHeight*0.8\r\n        let MyWidth = window.innerWidth*0.8\r\n\r\n        var canvas = document.getElementById('myCanvas4')        \r\n        canvas.height = MyHeight\r\n        canvas.width = MyWidth\r\n        var c = canvas.getContext('2d')        \r\n\r\n        const LogPositionMouse = (e) => {\r\n            mouse.x = e.clientX\r\n            mouse.y = e.clientY\r\n        }\r\n\r\n        const ResizeCanvas = () => {\r\n            canvas.height = window.innerHeight*0.8\r\n            canvas.width = window.innerWidth*0.8\r\n            init()\r\n        }\r\n\r\n        window.addEventListener('mousemove', LogPositionMouse)\r\n        window.addEventListener('resize', ResizeCanvas)\r\n\r\n        function Circle(x,y,dx,dy, radious, minRadious, color){\r\n            this.x = x\r\n            this.y = y\r\n            this.dx = dx\r\n            this.dy = dy\r\n            this.radious = radious\r\n            this.minRadious = minRadious\r\n            this.color = color\r\n\r\n            this.drawCircle = function (){\r\n                c.beginPath()            \r\n                c.arc(this.x, this.y, this.radious, 0, Math.PI*2, false)\r\n                c.strokeStyle = color\r\n                c.fillStyle = color\r\n                if(fillC){c.fill()}\r\n                c.stroke()\r\n            }\r\n\r\n            this.Update = function() {\r\n                if (this.x + this.radious > Math.floor(MyWidth) || this.x - this.radious < 0){\r\n                    this.dx = -this.dx\r\n                }\r\n                if (this.y + this.radious > Math.floor(MyHeight) || this.y - this.radious < 0){\r\n                    this.dy = -this.dy\r\n                }\r\n                this.x += this.dx\r\n                this.y += this.dy \r\n\r\n                let dimAll = canvas.getBoundingClientRect()\r\n                if(mouse.x-dimAll.x - this.x < 100 && mouse.x-dimAll.x - this.x > -100 && mouse.y-dimAll.y - this.y < 100 && mouse.y-dimAll.y - this.y > -100) {\r\n                    if(this.x - (mouse.x - dimAll.x) < 0){\r\n                        this.x -= 2\r\n                    }else{\r\n                        this.x += 2\r\n                    }\r\n                    if(this.y - (mouse.y - dimAll.y) < 0){\r\n                        this.y -= 2\r\n                    }else{\r\n                        this.y += 2\r\n                    }\r\n                }\r\n                this.drawCircle()\r\n            }\r\n        }          \r\n        \r\n        \r\n        var arrayCircle = []\r\n        const init = () => {\r\n            arrayCircle = []\r\n            for (var i = 0; i < 500; i++){\r\n                let Radious = Math.floor(Math.random() * 7 + 1)\r\n                var PX = Math.random()*(MyWidth-Radious*2) + Radious\r\n                var PY = Math.random()*(MyHeight-Radious*2) + Radious\r\n                var DX = (Math.random() - 0.5) * 2\r\n                var DY = (Math.random() - 0.5) * 2      \r\n                //var Color = Math.floor(Math.random()*16777215).toString(16)            \r\n                var Color = ColorAllowed[Math.floor(Math.random()*ColorAllowed.length)]\r\n                //var Color = '#ff0000'          \r\n                arrayCircle.push(new Circle(PX, PY, DX, DY, Radious, Radious, Color))\r\n            }\r\n        }   \r\n\r\n        init()        \r\n        var interval4 = setInterval(()=>{            \r\n            c.clearRect(0,0,MyWidth,MyHeight)\r\n            for (var i = 0; i < arrayCircle.length-1; i++){\r\n                arrayCircle[i].Update()\r\n            }            \r\n        },16)\r\n\r\n        return (() => {\r\n            clearInterval(interval4)\r\n            interval4 = 0\r\n        })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    \r\n\r\n    return (\r\n        <div className='col mt-2'>\r\n            <div className='row justify-content-center'>\r\n                <button className='btn btn-success mt-1' onClick={()=>fillC=!fillC} >Fill or Not</button>\r\n            </div>\r\n            <canvas id=\"myCanvas4\" className='mt-1' style={canvasStyle}>sdsd</canvas>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Canvas4\r\n","import React, {useEffect}  from 'react'\r\n\r\nfunction Canvas() {\r\n\r\n    const canvasStyle = {\r\n        backgroundColor: '#f3f6f4',\r\n        border: '2px solid black'\r\n    }\r\n\r\n    var mouse = {\r\n        x: undefined,\r\n        y: undefined\r\n    }  \r\n\r\n    var ColorAllowed = [\r\n        '#F2C38C',\r\n        '#24160D',\r\n        '#F35217',\r\n        '#8B0104',\r\n        '#570200'\r\n    ]\r\n\r\n\r\n    var fillC = true\r\n    var MaxRadious = 50\r\n    \r\n\r\n    useEffect(() => {\r\n        let MyHeight = window.innerHeight*0.8\r\n        let MyWidth = window.innerWidth*0.8\r\n\r\n        var canvas = document.getElementById('myCanvas')        \r\n        canvas.height = MyHeight\r\n        canvas.width = MyWidth\r\n        var c = canvas.getContext('2d')        \r\n\r\n        const LogPositionMouse = (e) => {\r\n            mouse.x = e.clientX\r\n            mouse.y = e.clientY\r\n        }\r\n\r\n        const ResizeCanvas = () => {\r\n            canvas.height = window.innerHeight*0.8\r\n            canvas.width = window.innerWidth*0.8\r\n            init()\r\n        }\r\n\r\n        window.addEventListener('mousemove', LogPositionMouse)\r\n        window.addEventListener('resize', ResizeCanvas)\r\n\r\n        function Circle(x,y,dx,dy, radious, minRadious, color){\r\n            this.x = x\r\n            this.y = y\r\n            this.dx = dx\r\n            this.dy = dy\r\n            this.radious = radious\r\n            this.minRadious = minRadious\r\n            this.color = color\r\n\r\n            this.drawCircle = function (){\r\n                c.beginPath()            \r\n                c.arc(this.x, this.y, this.radious, 0, Math.PI*2, false)\r\n                c.strokeStyle = color\r\n                c.fillStyle = color\r\n                if(fillC){c.fill()}\r\n                c.stroke()\r\n            }\r\n\r\n            this.Update = function() {\r\n                if (this.x + this.radious > Math.floor(MyWidth) || this.x - this.radious < 0){\r\n                    this.dx = -this.dx\r\n                }\r\n                if (this.y + this.radious > Math.floor(MyHeight) || this.y - this.radious < 0){\r\n                    this.dy = -this.dy\r\n                }\r\n                this.x += this.dx\r\n                this.y += this.dy \r\n                let dimAll = canvas.getBoundingClientRect()\r\n                if(mouse.x-dimAll.x - this.x < 50 && mouse.x-dimAll.x - this.x > -50 && mouse.y-dimAll.y - this.y < 50 && mouse.y-dimAll.y - this.y > -50 && this.radious < MaxRadious) {\r\n                    this.radious += 1\r\n                }else if (this.radious > this.minRadious){\r\n                    this.radious -= 1                }\r\n\r\n\r\n                this.drawCircle()\r\n            }\r\n        }          \r\n        \r\n        \r\n        var arrayCircle = []\r\n        const init = () => {\r\n            arrayCircle = []\r\n            for (var i = 0; i < 500; i++){\r\n                let Radious = Math.floor(Math.random() * 7 + 1)\r\n                var PX = Math.random()*(MyWidth-Radious*2) + Radious\r\n                var PY = Math.random()*(MyHeight-Radious*2) + Radious\r\n                var DX = (Math.random() - 0.5) * 2\r\n                var DY = (Math.random() - 0.5) * 2      \r\n                //var Color = Math.floor(Math.random()*16777215).toString(16)            \r\n                var Color = ColorAllowed[Math.floor(Math.random()*ColorAllowed.length)]\r\n                //var Color = '#ff0000'          \r\n                arrayCircle.push(new Circle(PX, PY, DX, DY, Radious, Radious, Color))\r\n            }\r\n        }   \r\n\r\n        init()        \r\n        var interval = setInterval(()=>{            \r\n            c.clearRect(0,0,MyWidth,MyHeight)\r\n            for (var i = 0; i < arrayCircle.length-1; i++){\r\n                arrayCircle[i].Update()\r\n            }            \r\n        },16)\r\n\r\n        return (() => {\r\n            clearInterval(interval)\r\n            interval = 0\r\n        })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    \r\n\r\n    return (\r\n        <div className='col mt-2'>\r\n            <div className='row justify-content-center'>\r\n                <button className='btn btn-success mt-1' onClick={()=>fillC=!fillC} >Fill or Not</button>\r\n            </div>\r\n            <canvas id=\"myCanvas\" className='mt-1' style={canvasStyle}>sdsd</canvas>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Canvas\r\n","import React, {useEffect, useRef} from 'react'\r\n\r\n\r\nfunction Canvas2() {\r\n    const canvasStyle = {\r\n        backgroundColor: '#f3f6f4',\r\n        border: '2px solid black'\r\n    }\r\n\r\n    const sliderRef = useRef(null)\r\n    const sliderBut = useRef(null)\r\n    const sliderIn = useRef(null)\r\n\r\n    useEffect(() => {\r\n        sliderRef.current.addEventListener('change', function(e){\r\n            Rain = e.target.value * 400\r\n            init()\r\n        })\r\n        sliderBut.current.addEventListener('click', function(e){\r\n            Rain = sliderIn.current.value\r\n            init()\r\n        })\r\n\r\n        let MyHeight = window.innerHeight*0.8\r\n        let MyWidth = window.innerWidth*0.8\r\n\r\n        var Rain = 100\r\n\r\n        var canvas = document.getElementById('myCanvas2')        \r\n        canvas.height = MyHeight\r\n        canvas.width = MyWidth\r\n        var c = canvas.getContext('2d') \r\n\r\n        function getValues(){\r\n            let Radious = Math.floor(Math.random()*10 + 1)\r\n            let PX = Math.random()*MyWidth - MyWidth*0.3\r\n            let PY = Math.random()*(-2000)\r\n            return [PX, PY, Radious]\r\n        }\r\n\r\n        function Star (x, y, dx, lastPX, radious, angle){\r\n            this.x = x\r\n            this.y = y\r\n            this.radious = radious\r\n            this.dx = dx\r\n            this.lastPX = lastPX\r\n            this.angle = angle\r\n\r\n            this.draw = function() {\r\n                c.beginPath()            \r\n                c.arc(this.x, this.y, this.radious, 0, Math.PI*2, false)\r\n                c.strokeStyle = '#000000'\r\n                c.fillStyle = '#000000'\r\n                c.fill()\r\n                c.stroke()\r\n            }\r\n\r\n            this.update = function() {\r\n                if(this.y > MyHeight) {\r\n                    this.dx = 2\r\n                    this.lastPX = this.x\r\n                    this.angle = 0\r\n                    this.radious -= this.radious*0.3\r\n                }\r\n\r\n                var moveRadious = this.radious * 5\r\n\r\n                if(this.dx === 1){\r\n                    this.x += 3\r\n                    this.y += 8\r\n                }else if(this.dx === 2){\r\n                    let velocity = 2\r\n                    this.angle += Math.acos(1-Math.pow(velocity/moveRadious,2)/2)\r\n                    this.x = this.lastPX + moveRadious + moveRadious * Math.cos(this.angle+Math.PI) \r\n                    this.y = MyHeight + (moveRadious + 30 )* Math.sin(this.angle+Math.PI)\r\n                }      \r\n                \r\n                if (moveRadious < 5) {\r\n                    let getV = getValues()                    \r\n                    this.x = getV[0]\r\n                    this.y = getV[1]\r\n                    this.radious = getV[2]\r\n                    this.dx = 1\r\n                    \r\n                }\r\n                this.draw()\r\n            }            \r\n        }\r\n\r\n        var arrayStars = []\r\n        const init = () => {\r\n            arrayStars = []\r\n            for (var i=0; i < Rain; i++){\r\n                let getV = getValues()\r\n                arrayStars.push(new Star(getV[0], getV[1], 1, 0, getV[2], 0))\r\n            }\r\n        }\r\n\r\n        init()\r\n\r\n        setInterval(()=>{            \r\n            c.clearRect(0,0,MyWidth,MyHeight)\r\n            for (var i = 0; i < arrayStars.length; i++){\r\n                arrayStars[i].update()\r\n            }            \r\n        },16)\r\n    }, [])\r\n\r\n     \r\n\r\n    return (\r\n        <div>\r\n            <div className='row justify-content-center mt-2'>                \r\n                <h3 className='col-4 col-md-4 col-lg-2 text-white'>Change Rain</h3>\r\n                <input ref={sliderRef} type=\"range\" class=\"custom-range col-4 col-md-4 col-lg-2 mt-2 mr-5\" min=\"0\" max=\"5\" step=\"0.1\"></input>   \r\n                <button ref={sliderBut} className='btn btn-danger col-md-4 col-4 col-lg-2 mr-2 ml-5'>Go Crazy</button>\r\n                <input ref={sliderIn} type='number' placeholder='Pick Number' className='col-4 col-md-4 col-lg-2'></input>\r\n            </div>\r\n            <canvas id=\"myCanvas2\" className='mt-4' style={canvasStyle}>sdsd</canvas>       \r\n              \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Canvas2\r\n","import React, {useState} from 'react';\nimport './App.css';\nimport Canvas4 from './Components/Canvas4';\nimport Canvas from './Components/Canvas';\n// import Canvas3 from './Components/Canvas3';\nimport Canvas2 from './Components/Canvas2';\n// import Canvas from './Components/Canvas';\nfunction App() {\n  \n  const [show, setShow] = useState(true)\n\n  return (\n    <div className=\"App\">\n      <button className='btn-primary btn mt-3' onClick={() => setShow(xx => !xx)}>Change Effect</button>\n      {show && <Canvas/>}\n      {!show && <Canvas4/>}\n      {/* <Canvas /> */}\n      <Canvas2 />\n      {/* <Canvas3 /> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}